{"version":3,"sources":["components/ScoreHud/ScoreHud.module.scss","components/NextBlockHud/NextBlockHud.module.scss","components/block/block.module.scss","constants/index.js","components/block/index.js","components/PauseButton/index.js","components/ScoreHud/index.js","components/NextBlockHud/index.js","components/MobileControls/index.js","pages/tetris/index.js","hooks/KeyPress.js","App.js","constants/filters.js","index.js","components/MobileControls/MobileControls.module.scss","components/PauseButton/PauseButton.module.scss","pages/tetris/tetris.module.scss"],"names":["module","exports","CANVAS_WIDTH","BLOCK_SIZE","ROW_COUNT","parseInt","CANVAS_HEIGHT","COLUMN_COUNT","COLORS","BLOCKS","delay","time","Promise","resolve","setTimeout","TetrisUtility","grid","i","push","Array","fill","num","min","max","replace","RegExp","posX","posY","constrain","Math","round","block","blockArray","entries","pos","getGridPosition","gridPositionX","gridPositionY","random","length","rows","count","j","Number","prototype","map","in_min","in_max","out_min","out_max","this","Block","props","className","styles","color","style","left","position","offsetX","top","positionY","offsetY","width","height","TetrisHud","callback","restartCallback","useState","paused","setPaused","pressed","setPressed","restartPressed","setRestartPressed","togglePause","animation","prev","wrapper","pauseHud","active","focusable","viewBox","onClick","d","ScoreHud","score","isMounted","setIsMounted","scoreDiff","setScoreDiff","currentScore","setCurrentScore","animate","setAnimate","appendScore","setAppendScore","useEffect","addScore","a","scoreHud","NextBlockHud","nextIndex","nextColor","offsets","container","containerContent","elem","MobileControls","showControls","leftRef","useRef","rightRef","downRef","rotateRef","preventDefaults","evt","preventDefault","stopPropagation","events","window","setKeysDown","onButtonReleased","forEach","ref","index","current","addEventListener","removeEventListener","bottomControls","leftSideArea","leftButton","rightSideArea","rightButton","bottomSideArea","downButton","rotateButton","Tetris","activeBlocks","setActiveBlocks","deleteRows","setDeleteRows","keysDown","validKeyCode","code","includes","handleKeyDown","keyCode","hideControls","handleKeyUp","UseKeyPress","tetrisLevelRef","gameOverRef","scoreRef","pauseRef","frameRef","keysRef","positionRef","positionYRef","colorRef","currentBlockIndexRef","currentBlockRotateRef","currentBlockData","hardDropRef","nextBlockRef","updateState","forceUpdate","useCallback","initTetrisArray","leftCollisionCheck","groundCollisionCheck","leftOffset","topOffset","getBlockArray","rightCollisionCheck","rightOffset","bottomOffset","recalculcateBlocks","hardDropKeyPressed","offset","shape","sizes","reduce","acc","rightWallCollisionCheck","leftWallCollisionCheck","moveBlocks","target","movingLeft","movingRight","clearRows","getRowsToClear","getPointsForClearing","row","topBlock","offsetY2","resetOffset","selectNextBlock","blockIndex","getRandomBlock","movingDown","isNaN","targetY","gridPosition","getCurrentBlocks","evalRow","arr","currentBlocks","dropOffset","collisionOffsets","MOVE_SPEED_DOWN_FAST","displayBlocks","posIndex","setGridBlock","requestAnimationFrame","cancelAnimationFrame","scale","innerWidth","gameover","minWidth","minHeight","transform","pauseContainer","scoreContainer","blockContainer","gameContainer","filter","flat","next","done","undefined","App","xmlns","version","display","id","x","y","in","mode","values","result","dx","attributeName","attributeType","dur","repeatCount","dy","in2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb8c6d3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreHud\":\"ScoreHud_scoreHud__3Ov27\",\"animate\":\"ScoreHud_animate__AmilY\",\"appendScore\":\"ScoreHud_appendScore__3D0Si\",\"score-gain\":\"ScoreHud_score-gain__h2nJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NextBlockHud_container__3GlOY\",\"containerContent\":\"NextBlockHud_containerContent__35Agu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"block_block__D3tXo\",\"block-destroy\":\"block_block-destroy__1Lcfo\"};","export const CANVAS_WIDTH = 560;\r\nexport const CANVAS_HEIGHT = 700;\r\nexport const BLOCK_SIZE = 35;\r\nexport const ROW_COUNT = parseInt(CANVAS_HEIGHT / BLOCK_SIZE);\r\nexport const COLUMN_COUNT = parseInt(CANVAS_WIDTH / BLOCK_SIZE);\r\nexport const GRID_SIZE = BLOCK_SIZE;\r\nexport const MOVE_SPEED = 3.5;\r\nexport const MOVE_SPEED_DOWN = 0.2;\r\nexport const MOVE_SPEED_DOWN_FAST = 3;\r\n\r\nexport const COLORS = [\"red\",\"pink\",\"orange\",\"blue\",\"green\",\"purple\"];\r\n\r\nexport const BLOCKS = [\r\n    [\r\n        [\r\n            [0,0],\r\n            [-BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE * 2,0],\r\n            [BLOCK_SIZE,0]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,-BLOCK_SIZE],\r\n            [0,BLOCK_SIZE],\r\n            [0,-BLOCK_SIZE * 2],\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [0,0],\r\n            [BLOCK_SIZE,0],\r\n            [0,BLOCK_SIZE],\r\n            [BLOCK_SIZE,BLOCK_SIZE]\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [0,0],\r\n            [-BLOCK_SIZE,0],\r\n            [BLOCK_SIZE,-BLOCK_SIZE],\r\n            [BLOCK_SIZE,0]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,-BLOCK_SIZE],\r\n            [0,BLOCK_SIZE],\r\n            [BLOCK_SIZE,BLOCK_SIZE]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE,BLOCK_SIZE]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,-BLOCK_SIZE],\r\n            [-BLOCK_SIZE,-BLOCK_SIZE],\r\n            [0,BLOCK_SIZE]\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [0,0],\r\n            [-BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE,-BLOCK_SIZE],\r\n            [BLOCK_SIZE,0]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [BLOCK_SIZE,0],\r\n            [0,-BLOCK_SIZE],\r\n            [0,-BLOCK_SIZE * 2]\r\n        ],\r\n        [\r\n            [0,-BLOCK_SIZE],\r\n            [-BLOCK_SIZE,-BLOCK_SIZE],\r\n            [BLOCK_SIZE,-BLOCK_SIZE],\r\n            [-BLOCK_SIZE,0]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,-BLOCK_SIZE],\r\n            [-BLOCK_SIZE,-BLOCK_SIZE],\r\n            [0,BLOCK_SIZE]\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [0,0],\r\n            [-BLOCK_SIZE,0],\r\n            [0,BLOCK_SIZE],\r\n            [BLOCK_SIZE,BLOCK_SIZE]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [-BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE,BLOCK_SIZE],\r\n            [0,-BLOCK_SIZE]\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [0,0],\r\n            [BLOCK_SIZE,0],\r\n            [0,BLOCK_SIZE],\r\n            [-BLOCK_SIZE,BLOCK_SIZE]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,BLOCK_SIZE],\r\n            [-BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE,-BLOCK_SIZE]\r\n        ]\r\n    ],\r\n    [\r\n        [\r\n            [0,0],\r\n            [BLOCK_SIZE,0],\r\n            [-BLOCK_SIZE,0],\r\n            [0,-BLOCK_SIZE]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,BLOCK_SIZE],\r\n            [0,-BLOCK_SIZE],\r\n            [BLOCK_SIZE,0]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,-BLOCK_SIZE],\r\n            [BLOCK_SIZE,-BLOCK_SIZE],\r\n            [-BLOCK_SIZE,-BLOCK_SIZE]\r\n        ],\r\n        [\r\n            [0,0],\r\n            [0,BLOCK_SIZE],\r\n            [0,-BLOCK_SIZE],\r\n            [-BLOCK_SIZE,0]\r\n        ]\r\n    ]\r\n];\r\n\r\nexport const delay = time => new Promise(resolve => setTimeout(resolve,time));\r\n\r\nexport class TetrisUtility {\r\n    static grid = [];\r\n    \r\n    static initTetrisArray() {\r\n        TetrisUtility.grid = [];\r\n        for(let i = 0; i < ROW_COUNT;i++) {\r\n            TetrisUtility.grid.push(Array(COLUMN_COUNT).fill(null) );\r\n        }\r\n    }\r\n\r\n    static constrain(num,min,max) {\r\n        return num < min ? min : num > max ? max : num;\r\n    }\r\n\r\n    static convertToInteger(num) {\r\n        return parseInt(num.replace(new RegExp(/[\\D]+/g),\"\") );\r\n    }\r\n\r\n    static getGridPosition(posX,posY) {\r\n        const arrayX = TetrisUtility.constrain(Math.round(posX / (CANVAS_WIDTH / COLUMN_COUNT) ),0,COLUMN_COUNT);\r\n        const arrayY = TetrisUtility.constrain(Math.round(posY / (CANVAS_HEIGHT / ROW_COUNT) ),0,ROW_COUNT);\r\n        \r\n        return [arrayX,arrayY];\r\n    }\r\n\r\n    static setGridBlock(block,posX,posY) {\r\n        TetrisUtility.grid[posX][posY] = block;\r\n    }\r\n\r\n    static groundCollisionCheck(posX,posY,blockArray) {\r\n        for(const [i,pos] of blockArray.entries() ) {\r\n            const [gridPositionX,gridPositionY] = TetrisUtility.getGridPosition(posX + pos[0],posY + pos[1]);\r\n\r\n            if (TetrisUtility.grid[gridPositionX][gridPositionY]) {\r\n                if (gridPositionY <= 1) {\r\n                    //Game Over\r\n                    return [-1,-1];\r\n                }\r\n                return [pos,i,gridPositionX];\r\n            }\r\n\r\n            if (gridPositionY >= ROW_COUNT) {\r\n                return [pos,i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getRandomBlock() {\r\n        return (Math.round(Math.random() * (BLOCKS.length - 1)));\r\n    }\r\n\r\n    static getRowsToClear() {\r\n        let rows = [];\r\n        for(let i = 0; i < ROW_COUNT;i++) {\r\n            let count = 0;\r\n            for(let j = 0; j < COLUMN_COUNT;j++) {\r\n                if (TetrisUtility.grid[j][i]) {\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            if (count >= COLUMN_COUNT) {\r\n                rows.push(i);\r\n            }\r\n        }\r\n\r\n        return rows;\r\n    }\r\n\r\n    static getPointsForClearing(count) {\r\n        return [40,100,300,1200][TetrisUtility.constrain(count - 1,0,4)];\r\n    }\r\n}\r\n\r\nNumber.prototype.map = function (in_min, in_max, out_min, out_max) {\r\n    return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n}","import styles from \"./block.module.scss\";\r\nimport { BLOCK_SIZE } from \"../../constants\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Block(props) {\r\n    return (\r\n        <div \r\n            className = {`${styles.block} ${props.color} ${props.className}`}\r\n            style = {\r\n                {\r\n                    left:`${props.position + (props.offsetX || 0)}px`,\r\n                    top:`${props.positionY + (props.offsetY || 0)}px`,\r\n                    width:BLOCK_SIZE,\r\n                    height:BLOCK_SIZE\r\n                }\r\n            }\r\n        >  \r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport styles from \"./PauseButton.module.scss\";\r\n\r\nexport default function TetrisHud({callback,restartCallback}) {\r\n    const [paused,setPaused] = useState(false);\r\n    const [pressed,setPressed] = useState(false);\r\n    const [restartPressed,setRestartPressed] = useState(false);\r\n\r\n    const togglePause = (animation = true) => {\r\n        setPaused(prev => {\r\n            if (typeof callback === \"function\") {\r\n                callback(!prev);\r\n            }\r\n            \r\n            return !prev;\r\n        });\r\n\r\n        if (!pressed && animation) {\r\n            setPressed(true);\r\n            setTimeout( () => setPressed(false), 500);\r\n        }\r\n    }\r\n\r\n    const toggleRestart = () => {\r\n        if (typeof restartCallback === \"function\") {\r\n            restartCallback();\r\n\r\n            if (paused) {\r\n                togglePause(false);\r\n            }\r\n\r\n            if (!restartPressed) {\r\n                setRestartPressed(true);\r\n                setTimeout( () => setRestartPressed(false), 500);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div className = {styles.wrapper}>\r\n        <div className = {`${styles.pauseHud} container ${pressed && styles.pressed}`}>\r\n            <svg className = {`${!paused && styles.active} MuiSvgIcon-root jss174`}\r\n                focusable=\"false\"\r\n                viewBox=\"0 0 24 24\"\r\n                aria-hidden=\"true\"\r\n                onClick = {togglePause}>\r\n                    <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"></path>\r\n            </svg>\r\n            <svg className = {`${paused && styles.active} MuiSvgIcon-root jss174`}\r\n                focusable=\"false\"\r\n                viewBox=\"0 0 24 24\"\r\n                aria-hidden=\"true\"\r\n                onClick = {togglePause}>\r\n                    <path d=\"M8 5v14l11-7z\"></path>\r\n            </svg>\r\n        </div>\r\n        <div className = {`${styles.pauseHud} ${restartPressed && styles.pressed} container`}>\r\n           <svg className ={ `MuiSvgIcon-root jss174 ${styles.active}`}\r\n                focusable=\"false\"\r\n                viewBox=\"0 0 24 24\"\r\n                aria-hidden=\"true\"\r\n                onClick = {toggleRestart}\r\n           >\r\n               <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"></path>\r\n            </svg>\r\n        </div>\r\n    </div>);\r\n}","import { useEffect, useState } from \"react\";\r\nimport styles from \"./ScoreHud.module.scss\";\r\nimport { delay } from \"../../constants/\";\r\n\r\nexport default function ScoreHud({ score }) {\r\n    const [isMounted,setIsMounted] = useState(false);\r\n    const [scoreDiff,setScoreDiff] = useState(0);\r\n    const [currentScore,setCurrentScore] = useState(0);\r\n    const [animate,setAnimate] = useState(false);\r\n    const [appendScore,setAppendScore] = useState(false);\r\n\r\n    useEffect( () => {\r\n        if (isMounted) {\r\n            setScoreDiff(score - currentScore);\r\n            addScore();\r\n        }\r\n        setIsMounted(true);\r\n    },[score]);\r\n\r\n    const addScore = async () => {\r\n        setAppendScore(true);\r\n        await delay(500);\r\n        setAnimate(true);\r\n        await delay(500);\r\n        setCurrentScore(score);\r\n        setAnimate(false);\r\n        setAppendScore(false);\r\n    }\r\n\r\n    return (<>\r\n        <div score = {`${scoreDiff > 0? \"+\" : \"\"}${scoreDiff}`}\r\n        className = {`${styles.scoreHud} ${animate && styles.animate} ${appendScore && styles.appendScore} container`}>\r\n            <p>Score: {currentScore}</p>\r\n        </div>\r\n    </>);\r\n}","import styles from \"./NextBlockHud.module.scss\";\r\nimport Block from \"../block\";\r\n\r\nimport {BLOCKS, BLOCK_SIZE} from \"../../constants\";\r\n\r\nexport default function NextBlockHud({nextIndex,nextColor}) {\r\n    const offsets = [\r\n        [0,0],\r\n        [-BLOCK_SIZE,-BLOCK_SIZE / 2],\r\n        [-BLOCK_SIZE / 2,BLOCK_SIZE / 2],\r\n        [-BLOCK_SIZE / 2,BLOCK_SIZE / 2],\r\n        [-BLOCK_SIZE / 2,-BLOCK_SIZE / 2],\r\n        [-BLOCK_SIZE / 2,-BLOCK_SIZE / 2],\r\n        [-BLOCK_SIZE / 2,BLOCK_SIZE / 2],\r\n    ]\r\n\r\n    nextIndex = nextIndex || 0;\r\n\r\n    return (<>\r\n        <div className = {`${styles.container} container`}>\r\n            <div className = {styles.containerContent}>\r\n                {\r\n                    BLOCKS[nextIndex][0].map(elem => {\r\n                        return (<Block\r\n                            color = {nextColor}\r\n                            position = {elem[0]}\r\n                            positionY = {elem[1]}\r\n                            offsetX = {offsets[nextIndex][0]}\r\n                            offsetY = {offsets[nextIndex][1]}\r\n                        />)\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    </>);\r\n}","import { useEffect, useRef } from \"react\";\r\nimport styles from \"./MobileControls.module.scss\";\r\n\r\nexport default function MobileControls({showControls}) {\r\n    const leftRef = useRef(null);\r\n    const rightRef = useRef(null);\r\n    const downRef = useRef(null);\r\n    const rotateRef = useRef(null);\r\n\r\n    useEffect( () => {\r\n        const preventDefaults = evt => {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n\r\n        let events = [];\r\n\r\n        events.push(evt => {\r\n            preventDefaults(evt);\r\n            window.setKeysDown({\"37\":true});\r\n        });\r\n\r\n        events.push(evt => {\r\n            preventDefaults(evt);\r\n            window.setKeysDown({\"39\":true});\r\n        });\r\n        \r\n        events.push(evt => {\r\n            preventDefaults(evt);\r\n            window.setKeysDown({\"40\":true});\r\n        });\r\n\r\n        events.push(evt => {\r\n            preventDefaults(evt);\r\n            window.setKeysDown({\"32\":true});\r\n        });\r\n\r\n        const onButtonReleased = evt => {\r\n            preventDefaults(evt);\r\n            window.setKeysDown({});\r\n        }\r\n\r\n        [leftRef,rightRef,downRef,rotateRef].forEach((ref,index) => {\r\n            [\"touchstart\",\"mousedown\"].forEach(evt => {\r\n                ref.current.addEventListener(evt,events[index]);\r\n            });\r\n            [\"touchend\",\"mouseup\"].forEach(evt => {\r\n                ref.current.addEventListener(evt,onButtonReleased);\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            [leftRef,rightRef,downRef,rotateRef].forEach((ref,index) => {\r\n                [\"touchstart\",\"mousedown\"].forEach(evt => {\r\n                    ref.current.removeEventListener(evt,events[index]);\r\n                });\r\n                [\"touchend\",\"mouseup\"].forEach(evt => {\r\n                    ref.current.removeEventListener(evt,onButtonReleased);\r\n                });\r\n            });\r\n        }\r\n    },[leftRef,rightRef,downRef,rotateRef]);\r\n\r\n    return (<>\r\n        <div className = {`${styles.bottomControls} ${showControls && styles.showControls}`}>\r\n            <span className = {styles.leftSideArea} ref = {leftRef}>\r\n                <svg className = {styles.leftButton} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"></path>\r\n                </svg>\r\n            </span>\r\n            <span className = {styles.rightSideArea} ref = {rightRef}>\r\n                <svg className = {styles.rightButton} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"></path>\r\n                </svg>\r\n            </span>\r\n            <span className = {styles.bottomSideArea} ref = {downRef}>\r\n                <svg className = {styles.downButton} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"></path>\r\n                </svg>\r\n            </span>\r\n            <svg className = {styles.rotateButton} ref = {rotateRef} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                <path d=\"M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z\"></path>\r\n            </svg>\r\n        </div>\r\n    </>);\r\n}","import styles from \"./tetris.module.scss\";\r\nimport Block from \"../../components/block\";\r\nimport PauseButton from \"../../components/PauseButton\";\r\nimport ScoreHud from \"../../components/ScoreHud\";\r\nimport NextBlockHud from \"../../components/NextBlockHud\";\r\nimport MobileControls from \"../../components/MobileControls\";\r\n\r\nimport { delay, COLORS, BLOCKS, CANVAS_WIDTH, CANVAS_HEIGHT, BLOCK_SIZE, GRID_SIZE, MOVE_SPEED, MOVE_SPEED_DOWN, MOVE_SPEED_DOWN_FAST, TetrisUtility, ROW_COUNT, COLUMN_COUNT } from \"../../constants\";\r\nimport { UseKeyPress } from \"../../hooks/KeyPress.js\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function Tetris() {\r\n    const [activeBlocks,setActiveBlocks] = useState(null);\r\n    const [deleteRows,setDeleteRows] = useState([]);\r\n    \r\n    const [ keysDown ] = UseKeyPress();\r\n    \r\n    const tetrisLevelRef = useRef(1);\r\n    const gameOverRef = useRef(false);\r\n    const scoreRef = useRef(0);\r\n    const pauseRef = useRef(false);\r\n    const frameRef = useRef(null);\r\n    const keysRef = useRef(keysDown);\r\n    const positionRef = useRef(0);\r\n    const positionYRef = useRef(0);\r\n    const colorRef = useRef(\"red\");\r\n    const currentBlockIndexRef = useRef(0);\r\n    const currentBlockRotateRef = useRef(0);\r\n    const currentBlockData = useRef({});\r\n    const hardDropRef = useRef(0); // 0 = Off, 1 = On, 2 = held (wait for release)\r\n    const nextBlockRef = useRef([0,\"red\"]);\r\n\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const restartGame = () => {\r\n        scoreRef.current = 0;\r\n        positionYRef.current = 0;\r\n        scoreRef.current = 0;\r\n        gameOverRef.current = false;\r\n        TetrisUtility.initTetrisArray();\r\n        selectNextBlock();\r\n        selectNextBlock();\r\n        window.hideControls = false;\r\n        tetrisLevelRef.current = 1;\r\n    }\r\n\r\n    useEffect( () => {\r\n        TetrisUtility.initTetrisArray();\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        keysRef.current = keysDown;\r\n\r\n        if (keysDown[\"32\"]) {\r\n            const leftCollisionCheck = TetrisUtility.groundCollisionCheck(positionRef.current + currentBlockData.current.leftOffset,positionYRef.current + currentBlockData.current.topOffset,getBlockArray(1) );\r\n            const rightCollisionCheck = TetrisUtility.groundCollisionCheck(positionRef.current + currentBlockData.current.rightOffset,positionYRef.current + currentBlockData.current.bottomOffset,getBlockArray(1) );\r\n            if (!leftCollisionCheck && !rightCollisionCheck) {\r\n                currentBlockRotateRef.current = (currentBlockRotateRef.current + 1) % BLOCKS[currentBlockIndexRef.current].length;\r\n                recalculcateBlocks();\r\n            }\r\n        }\r\n\r\n        const hardDropKeyPressed = keysDown[\"38\"] || keysDown[\"17\"];\r\n        if (hardDropRef.current === 0 && hardDropKeyPressed) {\r\n            hardDropRef.current = 1;\r\n        }\r\n        else if (hardDropRef.current === 2 && !hardDropKeyPressed) {\r\n            hardDropRef.current = 0;\r\n        }\r\n    },[keysDown]);\r\n    \r\n    const getBlockArray = useCallback( offset => {\r\n        const shape = BLOCKS[currentBlockIndexRef.current];\r\n        return shape[(currentBlockRotateRef.current + (offset || 0) ) % shape.length];\r\n    });\r\n\r\n    const recalculcateBlocks = useCallback( () => {\r\n        const blockArray = getBlockArray();\r\n        let sizes = [];\r\n\r\n        for(let i = 0; i < 2;i++) {\r\n            sizes.push([...blockArray].reduce( (acc,elem) => {\r\n                if (elem[i] < acc[0]) {\r\n                    return [elem[i],acc[1]];\r\n                }\r\n\r\n                if (elem[i] > acc[1]) {\r\n                    return [acc[0],elem[i]];\r\n                }\r\n\r\n                return acc;\r\n            },[0,0]));\r\n        }\r\n\r\n        currentBlockData.current = {\r\n            leftOffset:sizes[0][0],\r\n            rightOffset:sizes[0][1],\r\n            topOffset:sizes[1][0],\r\n            bottomOffset:sizes[1][1]\r\n        };\r\n\r\n        rightWallCollisionCheck();\r\n        leftWallCollisionCheck();\r\n    });\r\n\r\n    const rightWallCollisionCheck = useCallback( () => {\r\n        if (positionRef.current + currentBlockData.current.rightOffset > CANVAS_WIDTH - BLOCK_SIZE) {\r\n            positionRef.current = CANVAS_WIDTH - BLOCK_SIZE - currentBlockData.current.rightOffset;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    })\r\n\r\n    const leftWallCollisionCheck = useCallback( () => {\r\n        if (positionRef.current + currentBlockData.current.leftOffset < 0) {\r\n            positionRef.current = 0 - currentBlockData.current.leftOffset;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    })\r\n\r\n    const moveBlocks = useCallback( (target,movingLeft,movingRight) => {\r\n        if (movingRight) {\r\n            if (!rightWallCollisionCheck() ) {\r\n                if (!TetrisUtility.groundCollisionCheck(positionRef.current + BLOCK_SIZE,positionYRef.current + 12,getBlockArray() )) {\r\n                    positionRef.current += MOVE_SPEED;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        \r\n        else if (movingLeft) {\r\n            if (!leftWallCollisionCheck() ) {\r\n                if (!TetrisUtility.groundCollisionCheck(positionRef.current - BLOCK_SIZE,positionYRef.current + 12,getBlockArray() )) {\r\n                    positionRef.current -= MOVE_SPEED;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        \r\n        positionRef.current += (target - positionRef.current) * 0.05;\r\n    });\r\n\r\n    const clearRows = async () => {\r\n        const rows = TetrisUtility.getRowsToClear();\r\n\r\n        if (!rows || rows.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        while(deleteRows.length > 0) {\r\n            await delay(1);\r\n        }\r\n\r\n        scoreRef.current += TetrisUtility.getPointsForClearing(rows.length);\r\n        tetrisLevelRef.current = parseInt(TetrisUtility.constrain(scoreRef.current,0,150 * 10).map(0,150 * 20,1,10) );\r\n\r\n        setDeleteRows([...deleteRows,...rows]);\r\n\r\n        await delay(300);\r\n\r\n        setDeleteRows([]);\r\n\r\n        if (rows) {\r\n            for(const row of rows) {\r\n                for(let i = 0; i < COLUMN_COUNT;i++) {\r\n                    for(let j = row;j > 0;j--) {\r\n                        const topBlock =TetrisUtility.grid[i][j-1];\r\n                        if (topBlock) {\r\n                            topBlock.positionY += BLOCK_SIZE;\r\n                            topBlock.offsetY2 =  -BLOCK_SIZE;\r\n\r\n                            topBlock.resetOffset = (function*() {\r\n                                for(let i = 0; i < BLOCK_SIZE;i++) {\r\n                                    topBlock.offsetY2 ++;\r\n                                    yield;\r\n                                }\r\n\r\n                                return;\r\n                            })();\r\n                        }\r\n\r\n                        TetrisUtility.grid[i][j] = TetrisUtility.grid[i][j-1];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const selectNextBlock = () => {\r\n        //currentBlockIndexRef.current = blockIndex;\r\n        currentBlockIndexRef.current = nextBlockRef.current[0];\r\n        colorRef.current = nextBlockRef.current[1];\r\n        const blockIndex = TetrisUtility.getRandomBlock();\r\n        const nextColor = COLORS[Math.round(Math.random() * (COLORS.length - 1))];\r\n        nextBlockRef.current = [blockIndex,nextColor];\r\n        \r\n        recalculcateBlocks();\r\n    }\r\n\r\n    useEffect( () => {\r\n        \r\n        const animate = async () => {\r\n            if (!pauseRef.current && !gameOverRef.current) {\r\n                const movingLeft = keysRef.current[\"37\"] || keysRef.current[\"65\"];\r\n                const movingRight = keysRef.current[\"39\"] || keysRef.current[\"68\"];\r\n                const movingDown = keysRef.current[\"40\"] || keysRef.current[\"83\"];\r\n\r\n                const blockArray = getBlockArray();\r\n\r\n                if (isNaN(positionRef.current) ) {\r\n                    positionRef.current = CANVAS_WIDTH / 2;\r\n                }\r\n                let target = Math.round(positionRef.current / GRID_SIZE) * GRID_SIZE;\r\n\r\n                const targetY = ( () => {\r\n                    return blockArray.map(pos => {\r\n                        const gridPosition = TetrisUtility.getGridPosition(target + pos[0],positionYRef.current + pos[1]);\r\n\r\n                        for(let i = gridPosition[1]; i < ROW_COUNT;i++) {\r\n                            if (TetrisUtility.grid[gridPosition[0]][i]) {\r\n                                return i * BLOCK_SIZE - BLOCK_SIZE;\r\n                            }\r\n                        }\r\n\r\n                        return ROW_COUNT * BLOCK_SIZE - BLOCK_SIZE;\r\n                    });\r\n                })();\r\n\r\n                const getCurrentBlocks = (evalRow = false) => {\r\n                    const arr = blockArray.map( pos => {\r\n                        return (<Block\r\n                            className = {evalRow ? \"y\" + TetrisUtility.getGridPosition(0,positionYRef.current + pos[1])[1] : \"\"}\r\n                            position = {positionRef.current}\r\n                            positionY = {positionYRef.current}\r\n                            offsetX = {pos[0]}\r\n                            offsetY = {pos[1]}\r\n                            color = {colorRef.current}\r\n                        />);\r\n                    });\r\n\r\n                    return arr;\r\n                }\r\n\r\n                moveBlocks(target,movingLeft,movingRight);\r\n\r\n                let currentBlocks = getCurrentBlocks();\r\n\r\n                let collisionOffsets;\r\n                let dropOffset = 0;\r\n                do {\r\n                    collisionOffsets = TetrisUtility.groundCollisionCheck(target,positionYRef.current + BLOCK_SIZE + dropOffset - 10,blockArray);\r\n                    if (hardDropRef.current === 1) {\r\n                        dropOffset += BLOCK_SIZE;\r\n                    }\r\n                }\r\n                while(hardDropRef.current === 1 && !collisionOffsets);\r\n                \r\n                if (!collisionOffsets) {\r\n                    positionYRef.current += movingDown ? MOVE_SPEED_DOWN_FAST : tetrisLevelRef.current.map(1,10,MOVE_SPEED_DOWN,MOVE_SPEED_DOWN_FAST * 0.68);\r\n                }\r\n\r\n                else if (collisionOffsets[0] === -1) {\r\n                    gameOverRef.current = true;\r\n                }\r\n                \r\n                // On Collision Land\r\n                else {\r\n                    hardDropRef.current = 2;\r\n\r\n                    positionRef.current = target;\r\n                    positionYRef.current = targetY[collisionOffsets[1]] - collisionOffsets[0][1];\r\n                    currentBlocks = getCurrentBlocks(true);\r\n\r\n                    const displayBlocks = currentBlocks.map(elem => {\r\n                        return {\r\n                            position:elem.props.position,\r\n                            positionY:elem.props.positionY,\r\n                            offsetX:elem.props.offsetX,\r\n                            offsetY:elem.props.offsetY,\r\n                            offsetY2:elem.props.offsetY2,\r\n                            resetOffset:elem.props.resetOffset,\r\n                            color:elem.props.color\r\n                        };\r\n                    });\r\n\r\n                    // Set the grid matrix of occupied spaces\r\n                    for(const [posIndex,pos] of blockArray.entries() ) {\r\n                        const position = TetrisUtility.getGridPosition(target + pos[0],positionYRef.current + pos[1]);\r\n                        TetrisUtility.setGridBlock(displayBlocks[posIndex],...position);\r\n                    }\r\n                    \r\n                    // Check grid to clear\r\n                    await clearRows();\r\n\r\n                    positionYRef.current = 0; // Reset Y Axis\r\n                    selectNextBlock();\r\n                }\r\n\r\n                setActiveBlocks(currentBlocks);\r\n                forceUpdate();\r\n            }\r\n            \r\n            frameRef.current = requestAnimationFrame(animate);\r\n        }\r\n        \r\n        selectNextBlock();\r\n        selectNextBlock();\r\n        animate();\r\n            \r\n        return () => {\r\n            cancelAnimationFrame(frameRef.current);\r\n        };\r\n    },[]);\r\n\r\n    const width = CANVAS_WIDTH,height = CANVAS_HEIGHT;\r\n    const scale = TetrisUtility.constrain(window.innerWidth,350,700).map(350,700,0.5,1);\r\n\r\n    return (<>\r\n        <div className = {styles.wrapper}>\r\n            \r\n            <div className = {`${styles.container} ${gameOverRef.current && styles.gameover} container`} style = {{width:width,height:height,minWidth:width,minHeight:height,transform:`translateY(25px) scale(${scale})`}}>\r\n                <div className = {styles.pauseContainer}>\r\n                    <PauseButton\r\n                        callback = { paused => pauseRef.current = paused }\r\n                        restartCallback = { () => restartGame() }\r\n                    />\r\n                </div>\r\n                <div className = {styles.scoreContainer}>\r\n                    <ScoreHud score = {scoreRef.current}/>\r\n                </div>\r\n                <div className = {styles.blockContainer}>\r\n                    <NextBlockHud nextIndex = {nextBlockRef.current[0]} nextColor = {nextBlockRef.current[1]}/>\r\n                </div>\r\n                <MobileControls showControls = {!window.hideControls}/>\r\n\r\n                <div className = {styles.gameContainer}>\r\n                    {activeBlocks}\r\n                    {\r\n                        TetrisUtility.grid.filter(elem => elem).flat().map(elem => {\r\n                            if (!elem) {\r\n                                return <></>;\r\n                            }\r\n\r\n                            if (elem.resetOffset) {\r\n                                if (elem.resetOffset.next().done) {\r\n                                    elem.resetOffset = undefined;\r\n                                }\r\n                            }\r\n\r\n                            return (<Block\r\n                                position = {elem.position + elem.offsetX}\r\n                                positionY = {elem.positionY + elem.offsetY + (elem.offsetY2 || 0)}\r\n                                color = {elem.color}\r\n                                className = {`${elem.className} ${deleteRows.includes(TetrisUtility.getGridPosition(0,elem.positionY + elem.offsetY)[1]) ? \"destroy\" : \"\"}`}\r\n                            />)\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const UseKeyPress = () => {\r\n    const [keysDown,setKeysDown] = useState({});\r\n\r\n    const validKeyCode = code => {\r\n        return [\"32\",\"37\",\"39\",\"40\",\"65\",\"68\",\"83\",\"38\",\"17\"].includes(code);\r\n    }\r\n\r\n    const handleKeyDown = evt => {\r\n        const code = \"\" + evt.keyCode;\r\n\r\n        window.hideControls = true;\r\n\r\n        if (validKeyCode(code) && !keysDown[code]) {\r\n            setKeysDown(prev => {\r\n                return {...prev,[code]:true};\r\n            });\r\n        }\r\n    }\r\n    \r\n    const handleKeyUp = evt => {\r\n        const code = \"\" + evt.keyCode;\r\n        \r\n        if (validKeyCode(code) && keysDown[code]) {\r\n            setKeysDown(prev => {\r\n                return {...prev,[code]:false};\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        window.addEventListener(\"keydown\",handleKeyDown);\r\n        window.addEventListener(\"keyup\", handleKeyUp);\r\n\r\n        window.setKeysDown = setKeysDown;\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleKeyDown);\r\n            window.removeEventListener(\"keyup\", handleKeyUp);\r\n        };\r\n    });\r\n\r\n    return [ keysDown ];\r\n}","import Tetris from \"./pages/tetris\";\n\nimport { GlitchRaw } from \"./constants/filters\";\n\nfunction App() {\n    return (<>\n        <Tetris/>\n        {GlitchRaw()}\n        </>\n    );\n}\n\nexport default App;","export function GlitchRaw() {\r\n    return ( \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" style = {{display:\"none\"}}>\r\n            <defs>\r\n                <filter id=\"glitch\" x=\"0\" y=\"0\">\r\n                    <feColorMatrix in=\"SourceGraphic\" mode=\"matrix\" values=\"1 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 0\" result=\"r\" />\r\n                    <feOffset in=\"r\" result=\"r\" dx=\"-5\">\r\n                    <animate attributeName=\"dx\" attributeType=\"XML\" values=\"0; -5; 0; -18; -2; -4; 0 ;-3; 0\" dur=\"0.2s\" repeatCount=\"indefinite\"/>\r\n                    </feOffset>\r\n                    <feColorMatrix in=\"SourceGraphic\" mode=\"matrix\" values=\"0 0 0 0 0  0 1 0 0 0  0 0 0 0 0  0 0 0 1 0\" result=\"g\"/>\r\n                    <feOffset in=\"g\" result=\"g\" dx=\"-5\" dy=\"1\">\r\n                    <animate attributeName=\"dx\" attributeType=\"XML\" values=\"0; 0; 0; -3; 0; 8; 0 ;-1; 0\" dur=\"0.15s\" repeatCount=\"indefinite\"/>\r\n                    </feOffset>\r\n                    <feColorMatrix in=\"SourceGraphic\" mode=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 1 0 0  0 0 0 1 0\" result=\"b\"/>\r\n                    <feOffset in=\"b\" result=\"b\" dx=\"5\" dy=\"2\">\r\n                    <animate attributeName=\"dx\" attributeType=\"XML\" values=\"0; 3; -1; 4; 0; 2; 0 ;18; 0\" dur=\"0.35s\" repeatCount=\"indefinite\"/>\r\n                    </feOffset>\r\n                    <feBlend in=\"r\" in2=\"g\" mode=\"screen\" result=\"blend\" />\r\n                    <feBlend in=\"blend\" in2=\"b\" mode=\"screen\" result=\"blend\" />\r\n                </filter>\r\n            </defs>\r\n        </svg>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomControls\":\"MobileControls_bottomControls__2roHZ\",\"controls-fadeout\":\"MobileControls_controls-fadeout__3lEj_\",\"showControls\":\"MobileControls_showControls__2mmlT\",\"controls-fadein\":\"MobileControls_controls-fadein__3c1TW\",\"leftButton\":\"MobileControls_leftButton__ZWEMI\",\"rightButton\":\"MobileControls_rightButton__2fa9n\",\"downButton\":\"MobileControls_downButton__1S8P8\",\"rotateButton\":\"MobileControls_rotateButton__1Bn0f\",\"leftSideArea\":\"MobileControls_leftSideArea__2ZJcu\",\"rightSideArea\":\"MobileControls_rightSideArea__pevX0\",\"bottomSideArea\":\"MobileControls_bottomSideArea__2-naU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PauseButton_wrapper__cknPj\",\"pauseHud\":\"PauseButton_pauseHud__1OuOq\",\"button-appear\":\"PauseButton_button-appear__3Hvvc\",\"active\":\"PauseButton_active__2cKWN\",\"pressed\":\"PauseButton_pressed__SgxHN\",\"button-pressed\":\"PauseButton_button-pressed__2zxyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"tetris_wrapper__2epyn\",\"background-animate\":\"tetris_background-animate__3PcHz\",\"container\":\"tetris_container__2wbTF\",\"gameContainer\":\"tetris_gameContainer__5Qmx2\",\"gameover\":\"tetris_gameover__38Gq4\",\"gameover-appear\":\"tetris_gameover-appear__1YVQ7\",\"gameover-animate-in\":\"tetris_gameover-animate-in__B-zEe\",\"pauseContainer\":\"tetris_pauseContainer__JghDj\",\"scoreContainer\":\"tetris_scoreContainer__1pZKE\",\"blockContainer\":\"tetris_blockContainer__25RAg\"};"],"sourceRoot":""}